upstream internal_backend {
  server backend:8000 max_fails=3 fail_timeout=5s;
}

map $status $status_text {
  400 'Bad Request';
  401 'Unauthorized';
  403 'Forbidden';
  404 'Not Found';
  405 'Method Not Allowed';
  408 'Request Timeout';
  413 'Payload Too Large';
  429 'Too Many Requests';
  500 'Internal Server Error';
  502 'Bad Gateway';
  503 'Service Unavailable';
  504 'Gateway Timeout';
  default 'Unknown Error';
}

server {
  listen 5173;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 1000;  # Minimum length of response to compress
  gzip_vary on;          # Enable Vary header for proxies

  # Custom error handling for JSON responses
  error_page 400 401 403 404 405 408 413 429 500 502 503 504 /error.json;

  # Handler for JSON error responses
  location = /error.json {
    internal;
    default_type application/json;
    return 200 '{"status": $status, "message": "$status_text", "timestamp": "$time_local"}';
  }

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri /index.html =404;

    error_page 404 = /index.html;
  }

  location /api {
    proxy_pass http://internal_backend;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;

    # Timeouts and retries
    proxy_connect_timeout 3s;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_next_upstream timeout http_500 http_502 http_503 http_504;

    # Set JSON content type for error responses
    add_header Content-Type application/json;

    proxy_intercept_errors on;
    error_page 500 502 503 504 /error.json;
  }

  include /etc/nginx/extra-conf.d/*.conf;
}

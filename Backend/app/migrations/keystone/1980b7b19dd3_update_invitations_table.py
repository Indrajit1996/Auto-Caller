"""update invitations table

Revision ID: 1980b7b19dd3
Revises: 8bf5c4da947b
Create Date: 2024-11-15 23:12:50.898626

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1980b7b19dd3"
down_revision = "8bf5c4da947b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("invitation", sa.Column("token", sa.Uuid(), nullable=False))
    op.add_column(
        "invitation", sa.Column("user_expiry_date", sa.DateTime(), nullable=False)
    )
    op.add_column("invitation", sa.Column("active", sa.Boolean(), nullable=False))
    op.drop_column("invitation", "expiry_date")
    op.drop_column("invitation", "sent_date")
    op.add_column(
        "notification", sa.Column("email_status_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "notification", "email_status", ["email_status_id"], ["id"]
    )
    op.create_unique_constraint(None, "user_settings", ["user_id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_settings", type_="unique")
    op.drop_constraint(None, "notification", type_="foreignkey")
    op.drop_column("notification", "email_status_id")
    op.add_column(
        "invitation",
        sa.Column(
            "sent_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "invitation",
        sa.Column(
            "expiry_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("invitation", "active")
    op.drop_column("invitation", "user_expiry_date")
    op.drop_column("invitation", "token")
    # ### end Alembic commands ###
